# Execution Section

PRACTICAL_RUNNING_TIME = 5000

# Memory Section

WORD_LENGTH = 10
MEM_SIZE = 64

# Register Section

SYSREG_NUM             = 8
SYSREG_NUM_ADDRESSABLE = 3 # only pc, ro, sp are addressable in instructions

SYSREG_NAME_PC   = 'pc'
SYSREG_NAME_INS  = 'ins'
SYSREG_NAME_BR   = 'br'
SYSREG_NAME_RO   = 'ro'
SYSREG_NAME_QIFW = 'qifw'
SYSREG_NAME_QIFV = 'qifv'
SYSREG_NAME_WAIT = 'wait'
SYSREG_NAME_SP   = 'sp'

USRREG_NUM = 5
USRREG_NAME = [f'r{i}' for i in range(USRREG_NUM)]

# Assemler Section

ADDRESSABLE_REG_ONLY = False
REGSEC_LENGTH = len(bin(USRREG_NUM - 1 + (SYSREG_NUM_ADDRESSABLE if ADDRESSABLE_REG_ONLY else SYSREG_NUM))[2:])
# Compressed Assembler
OPCODE_LENGTH_COMPRESSED  = 2
OPCODEI_LENGTH_COMPRESSED = GATE1_LENGTH_COMPRESSED = 4
OPCODER_LENGTH_COMPRESSED = GATE2_LENGTH_COMPRESSED = OP1_LENGTH_COMPRESSED = OP2_LENGTH_COMPRESSED = 5
IMMSEC_LENGTH_COMPRESSED  = 10
OPCODE_START_COMPRESSED = 0

OPCODE_END_COMPRESSED = OPCODE_LENGTH_COMPRESSED
OPCODEI_START_COMPRESSED = OPCODER_START_COMPRESSED = GATE1_START_COMPRESSED = GATE2_START_COMPRESSED = OP1_START_COMPRESSED = OP2_START_COMPRESSED = OPCODE_LENGTH_COMPRESSED
OPCODEI_END_COMPRESSED = GATE1_END_COMPRESSED = OPCODEI_START_COMPRESSED + OPCODEI_LENGTH_COMPRESSED
OPCODER_END_COMPRESSED = GATE2_END_COMPRESSED = OP1_END_COMPRESSED = OP2_END_COMPRESSED = OPCODER_START_COMPRESSED + OPCODER_LENGTH_COMPRESSED

REG_START_COMPRESSED = OPCODEI_END_COMPRESSED
REG_END_COMPRESSED   = OPCODEI_END_COMPRESSED + REGSEC_LENGTH

REG1_START_COMPRESSED = OPCODER_END_COMPRESSED
REG1_END_COMPRESSED   = REG1_START_COMPRESSED + REGSEC_LENGTH
REG2_START_COMPRESSED = REG1_END_COMPRESSED
REG2_END_COMPRESSED   = REG2_START_COMPRESSED + REGSEC_LENGTH
REG3_START_COMPRESSED = REG2_END_COMPRESSED
REG3_END_COMPRESSED   = REG3_START_COMPRESSED + REGSEC_LENGTH

IMM_START_COMPRESSED = REG_END_COMPRESSED
IMM_END_COMPRESSED   = IMM_START_COMPRESSED + IMMSEC_LENGTH_COMPRESSED

COMPRESSED_CODE_LENGTH = OPCODE_LENGTH_COMPRESSED + max(OPCODEI_LENGTH_COMPRESSED + REGSEC_LENGTH + IMMSEC_LENGTH_COMPRESSED, OP2_LENGTH_COMPRESSED + 3 * REGSEC_LENGTH)

# configuration printer
def print_config():
    import inspect
    
    code = inspect.getsourcefile(lambda:0)
    
    exec(open(code).read())
    
    for name, value in globals().items():
        if name.startswith('_'): continue
        if name == 'print_config': continue
        print(f"{name}: {value}")